# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Node.js CICD

name: Node.js CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile:
    runs-on: agent-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'   # adjust version as needed

      - name: Frontend Compilation (Syntax Check)
        run: |
          cd client
          find . -name "*.js" -exec node --check {} +

      - name: Backend Compilation (Syntax Check)
        run: |
          cd api
          find . -name "*.js" -exec node --check {} +

  gitleaks-scan:
    runs-on: agent-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-banner
        continue-on-error: true

  trivy-fs-scan:
    runs-on: agent-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy FS scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: HIGH,CRITICAL

  sonar-frontend:
    runs-on: agent-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Install dependencies (Frontend)
        run: |
          cd client
          npm install

      - name: Run SonarQube analysis
        uses: SonarSource/sonarcloud-github-action@v2.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: client
